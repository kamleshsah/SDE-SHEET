'''
https://leetcode.com/problems/climbing-stairs/
'''
***Approach 1*** Memoization 
class Solution:
    def climbStairs(self, n: int) -> int:
        def solve(n,dp):
            if n<=1:
                dp[n]=1
                return 1
            if dp[n]!=0:
                return dp[n]
            dp[n]=solve(n-1,dp)+solve(n-2,dp)
            return dp[n]
        dp=[0 for i in range(n+1)]
        solve(n,dp)
        return dp[n]
        
****Approach 2**** Iterative

class Solution:
    def climbStairs(self, n: int) -> int:
        dp=[0 for i in range(n+1)]
        dp[0]=1
        dp[1]=1
        for i in range(2,n+1):
            dp[i]=dp[i-1]+dp[i-2]
        return dp[n]

