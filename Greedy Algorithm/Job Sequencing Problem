'''''
GFG : Including class and objects

## Job Sequencing Problem || https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#
## TC : O(nlogn)+O(n*m)
''''
class Solution:
    def JobScheduling(self,Jobs,n):
        
        jobs=sorted(Jobs,key=lambda x:x.profit,reverse=True)
        i=0;time=0;cnt=0;profit=0
        max_d=0
        
        for i in jobs:
            if i.deadline>max_d:
                max_d=i.deadline
                
        max_d_arr=[-1]*(max_d+1)
        
        for i in jobs:
            for j in range(i.deadline,0,-1):
                if max_d_arr[j]==-1:
                    max_d_arr[j]=j
                    profit+=i.profit
                    cnt+=1
                    break
        
        return [cnt,profit]
        
'''''
Without class and objects

'''''


def JobScheduling(Jobs,n):  
    jobs=sorted(Jobs,key=lambda x:x[2],reverse=True)
    cnt=0;profit=0
    max_d=0

    for i in jobs:
        if i[1]>max_d:
            max_d=i[1]

    max_d_arr=[-1]*(max_d+1)
    for i in jobs:
        for j in range(i[1],0,-1):
            if max_d_arr[j]==-1:
                max_d_arr[j]=j
                profit+=i[2]
                cnt+=1
                break

    return [cnt,profit]

N = 4
Jobs = [[1,4,20],[2,1,10],[3,1,40],[4,1,30]]
print(JobScheduling(Jobs,n))
